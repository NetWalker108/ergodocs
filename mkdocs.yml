site_name: ErgoDocs
site_url: https://docs.ergoplatform.com
repo_url: https://github.com/glasgowm148/ergodocs
edit_uri: edit/main/docs/


theme:
    name: material
    favicon: assets/favicon.png
    palette: # dark scheme toggle on material + dark orange
      - scheme: slate
        primary: red
        toggle:
          icon: material/toggle-switch-off-outline
          name: Switch to dark mode
      - scheme: default
        primary: red
        toggle:
          icon: material/toggle-switch
          name: Switch to light mode
    features:
        - navigation.tabs.sticky
        - navigation.instant
        - navigation.sections # The bold sections in navigation
        - navigation.tracking
        - navigation.indexes
      #  - toc.integrate
    logo: assets/logo.png
    font:
      text: Roboto
extra_css: 
  - assets/extra.css
  - https://unpkg.com/mermaid@8.5.1/dist/mermaid.css
extra_javascript:
  - assets/extra.js
  - assets/mathjax.js
  - https://polyfill.io/v3/polyfill.min.js?features=es6
  - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js
  - https://unpkg.com/mermaid@8.5.1/dist/mermaid.min.js

extra:
  version:
    provider: mike


extra:
  generator: false


plugins:
  - search
  - awesome-pages
  - autolinks 
  - tags: # https://squidfunk.github.io/mkdocs-material/setup/setting-up-tags/#
      tags_file: tags.md
  #- categories
  #- exclude-search # https://github.com/chrieke/mkdocs-exclude-search
  #- semiliterate # http://studioinfinity.org/semiliterate/mkdocs_semiliterate/plugin/
  #- awesome-list
  #- pagenav-generator #https://github.com/Andre601/mkdocs-pagenav-generator



markdown_extensions:
  - meta
  - admonition
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
          format: !!python/name:pymdownx.superfences.fence_div_format
  - pymdownx.arithmatex:
      generic: true



nav:
  - Getting Started:
    - Getting Started: index.md
    - Contributing: contribute.md
    - FAQ:
      - General: faq/general.md
      - Interview: faq/interview.md
      - Scaling: dev/protocol/scaling.md
    - Events: 
      - Events: events/index.md
      - ERGOHACK: events/ergohack.md
      - ErgoSummit: events/ergosummit.md
  - üî¨ ‚îÉ Learn: 
    - Key Features: 
      - Protocol: dev/protocol/index.md
      - eUTXO:
        - Overview: dev/protocol/eutxo/eutxo.md
        - ELI5: dev/protocol/eutxo/accountveutxo.md
        - Atomic Swaps: dev/protocol/eutxo/atomic.md
      - NIPoPoWs: dev/protocol/nipopow.md
      - Sigma Protocols: dev/scs/sigma.md
      - Storage Rent: mining/rent.md
      - Autolykos: mining/autolykos.md
    - Resources:
      - Documents: documents.md
      - EIPs:
        - What is an EIP?: dev/protocol/eip.md
        - UTXO-Set Scanning Wallet API: dev/wallet/standards/eip1.md
        - Deterministic Wallet Standard: dev/wallet/standards/eip3.md
        - Asset Standard: dev/tokens/standards/eip4.md
        - Cold Wallet: dev/wallet/standards/eip19.md
        - Geniune Token Verification: dev/tokens/standards/eip21.md
        - Proxy Contracts: dev/wallet/payments/standards/eip17.md
        - ErgoPay Protocol: dev/wallet/payments/standards/eip20.md
        - Payment Request URI: dev/wallet/payments/standards/eip25.md

      - Audit: dev/protocol/audit.md
      - Social Contract: social_contract.md
      - Key Sites:
        - Sigmaverse: https://sigmaverse.io
        - Community Spaces: https://ergoplatform.org/en/community/

  - ‚õè ‚îÉ  Mine:
    - Mining: mining/index.md
    - Dig in: 
      - Join a Pool: mining/setup/join.md
      - Solo Mining: mining/setup/solo.md
      - Host a Pool: mining/setup/pool.md
      - Subpooling: mining/setup/subpool.md
      - Autolykos: mining/autolykos.md
      - Governance: mining/governance.md
      - Storage Rent: mining/rent.md
      - Log-Space Mining: mining/log_space.md
  
  - üõ† ‚îÉ Build:
    - Developers: dev/index.md
    - Node:
      - Install: 
        - Install: node/install/index.md
        - Troubleshooting: node/install/troubleshooting.md
        - Docker: node/install/docker.md
        - Pi: node/install/pi.md
      - Wallet: node/wallet.md
      - API: node/swagger.md
      - FAQ: node/install/faq.md
      - Resources:
        - Test-net: dev/start/testnet.md
        #- Architecture: node/architecture.md
        - Distributed Signatures: node/sigs.md
        - Modes of Operation: node/modes.md
        - Hierarchical keys: dev/wallet/keys.md
      #- Light Modes: 
      #  - Digest State: node/digest-state.md
      #  - History Pruning: node/history-pruning.md
      #  - Snapshots: node/snapshots.md
        - P2P:
          - P2P: dev/p2p/index.md
          - Handshaking: dev/p2p/p2p-handshake.md
          - Network Messages: dev/p2p/network.md
          # - Modifiers Exchange: dev/p2p/modifiers.md
          # - BlockP2P: dev/p2p/BlockP2P.md
    - Anatomy of Ergo:
      - Box:
        - Box: dev/data-model/box/index.md
        - Registers: dev/data-model/box/registers.md
      - Tokens:
        - Create a token: dev/tokens/issue.md
        - Burning a token: dev/tokens/burn.md
        - NFTs:
          - NFTs: dev/tokens/nfts/index.md
          - Create a NFT: dev/tokens/nfts/create.md
          - Royalties: dev/tokens/nfts/royalties.md
        - Standards:
          - Asset Standard: dev/tokens/standards/eip4.md
          - Geniune Token Verification: dev/tokens/standards/eip21.md
          - Auction Contract: dev/tokens/standards/eip22.md
          - Artwork Contract: dev/tokens/standards/eip24.md
      - Transactions: 
        - Transactions: dev/protocol/transaction.md
        - Model Transaction: dev/protocol/model-tx.md
        - Composing Transactions: 
          - ErgoPay:
            - ErgoPay: dev/wallet/payments/ergopay/ergo-pay.md
            - Tutorial: dev/wallet/payments/ergopay/ep-tutorial.md
          - dApp Connector: dev/wallet/payments/dApp.md
          - Proxy Contracts:
            - Proxy Contracts: dev/wallet/payments/proxy.md
            - Assembler: dev/stack/assembler.md
          - Standards:
            - Proxy Contracts: dev/wallet/payments/standards/eip17.md
            - ErgoPay Protocol: dev/wallet/payments/standards/eip20.md
            - Payment Request URI: dev/wallet/payments/standards/eip25.md
          - Data Inputs: dev/scs/data-inputs.md
          - ErgoTool: dev/stack/ergotool.md
        - Sending A Chained Transaction: dev/anatomy/transactions/chained.md

      - Addresses: dev/wallet/address.md
      - Block: dev/data-model/block.md
      - Wallets:
        - Software: dev/wallet/wallets.md
        - Ledger: dev/wallet/payments/ledger.md
        - Integration: dev/Integration/guide.md
        - Standards:
          - UTXO-Set Scanning Wallet API: dev/wallet/standards/eip1.md
          - Deterministic Wallet Standard: dev/wallet/standards/eip3.md
          - Cold Wallet: dev/wallet/standards/eip19.md
      #- UTXO-State: 
    - Programming Languages:
      - Scala: dev/lang/scala.md
      - Java: dev/lang/java.md
      - Kotlin: dev/lang/kotlin.md
      - Rust: dev/lang/rust.md
      - Python: dev/lang/python.md
      - C#: dev/lang/csharp.md
      - JavaScript: dev/lang/js.md
    - Frameworks:
      - What framework should I use?: dev#getting-started
      - AppKit:
        - AppKit: dev/stack/appkit/appkit.md
        - Tutorial: dev/stack/appkit/tutorial.md
        - Gradle: dev/stack/appkit/gradle.md
      - Mosaik: dev/stack/mosaik/intro.md
      - JSON dApp Environment: dev/stack/jde.md
      - Headless dApp Framework: dev/stack/headless.md
      - RustKit: https://github.com/rust-ergo/rustkit
    - Libaries:
      - Fleet (JS): dev/stack/fleet.md
      - GetBlok Plasma: dev/lib/plasma.md
      - Scrypto: dev/lib/scrypto.md
      - EIP12-Types: https://github.com/capt-nemo429/eip12-types
     # - SigmaJS
    - Explorer & APIs: 
      - Explorer: 
        - ergo-explorer: dev/stack/explorer/explorer.md
        - Local Setup: dev/stack/explorer/explorer_local.md
        - Pi Blockchain Explorer: dev/stack/rpi-blockchain-explorer.md
      - GraphQL: dev/stack/explorer/graphql.md
      - APIs: dev/stack/api.md

    - Smart Contracts:
      - Creating a simple P2S app: dev/scs/p2s.md
      - Smart Contracts: dev/scs/index.md
      - ErgoScript: 
        - Overview: dev/scs/ergoscript.md
        - Quick Primer: dev/scs/ergoscript-primer.md
        - Sigma Language: dev/scs/sigma-lang.md
        - Sigma Protocols: dev/scs/sigma.md
        - Debugging: dev/scs/debugging.md
      - FlowCards: dev/scs/flowcards.md
      - Multi-Stage Contracts: dev/scs/multi.md 
      - ErgoTree: dev/scs/ergotree.md
      - Kiosk: dev/stack/kiosk.md
    - Resources: 
      - Off-Chain:
        - Oracle-Core: dev/oc/oracle.md
      - Bookmarks: dev/start/resources.md
     

  - üí° ‚îÉ  Applications:
    - Explore:
      - Applications: uses/index.md
      - Live dApps:
        - DEXs: uses/dex.md
        - Stablecoins: uses/stablecoins.md
        - Oracles: uses/oracles.md
        - NFTs: uses/nft.md
        - Mixing: uses/mixer.md
        - CrowdFunding: uses/crowdfunding.md
        - Gaming: uses/gaming.md
        - Metaverse: uses/metaverse.md

      #- ErgoRaffle: uses/raffle.md
      - In Development:
        - ProfitSharing: uses/profit.md
        - ICOs: uses/ico.md
        - Index Coins: uses/index_coins.md
        - Lending: uses/lending.md
        - Zero-Knowledge: uses/zk.md
        - DAOs: uses/dao.md       
        - Grid Trading: uses/grid_trading.md
      - Ideas & Discussion:
        - Buy Back Guarantees: uses/dex-buyback.md
        - LETS: uses/lets.md
        - Trustless LETS: uses/trustless-lets.md
       # - Atomic Swaps: dev/protocol/atomic.md
        - ErgoData: uses/ErgoData.md
        - Email Client for Blocked Internet: uses/blocked_web.md
        - Lotteries: uses/lottery.md
        - Insurance: uses/insurance.md
        - Derivatives: uses/deriv.md
        - P2P Options Contract: uses/p2p_options.md
        - ChainCash: uses/chaincash.md
        - Yield Aggregation: uses/yield.md
        - Micro Credit: dev/scs/microcredit.md
        - PoW Tokens: uses/PoW_tokens.md
        - Mutual Credit: uses/mutual_credit.md
        - Prediction Markets: uses/prediction_markets.md
        - Perpetual Tokens: uses/perpetual.md
        - Bonding Curve: uses/bonding.md
       # - Context Claims: uses/context-claims.md
      #  - Asset Tokenisation: uses/tokenisation.md
       # - Privacy: uses/privacy.md
      #  - Collateral Mining: uses/collateral-mining.md
      #  - Math Fun: uses/math_fun.md
     #  - CDBC: uses/cbdc.md





