site_name: ErgoDocs
site_url: https://docs.ergoplatform.com
repo_url: https://github.com/glasgowm148/ergodocs
edit_uri: edit/main/docs/


theme:
    name: material
    favicon: assets/favicon.png
    palette: # dark scheme toggle on material + dark orange
      - scheme: default
        primary: red
        toggle:
          icon: material/toggle-switch-off-outline
          name: Switch to dark mode
      - scheme: slate
        primary: red
        toggle:
          icon: material/toggle-switch
          name: Switch to light mode
    features:
        - navigation.tabs.sticky
        - navigation.instant
        - navigation.sections # The bold sections in navigation
        - navigation.tracking
        - navigation.indexes
        - content.tabs.link
      #  - toc.integrate
    logo: assets/logo.png
    font:
      text: Roboto
extra_css: 
  - assets/extra.css
  - assets/neoteroi-mkdocs.css
  - https://unpkg.com/mermaid@8.5.1/dist/mermaid.css
extra_javascript:
  - assets/extra.js
  - assets/mathjax.js
  - https://polyfill.io/v3/polyfill.min.js?features=es6
  - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js
  - https://unpkg.com/mermaid@8.5.1/dist/mermaid.min.js
  - https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML

extra:
  version:
    provider: mike


extra:
  generator: false


plugins:
  - search
  - mkdocs-jupyter #https://github.com/danielfrg/mkdocs-jupyter
  - section-index #https://github.com/oprypin/mkdocs-section-index
  #- awesome-pages https://github.com/lukasgeiter/mkdocs-awesome-pages-plugin
  - autolinks 
  - tags: # https://squidfunk.github.io/mkdocs-material/setup/setting-up-tags/#
      tags_file: tags.md
  #- categories
  #- exclude-search # https://github.com/chrieke/mkdocs-exclude-search
  #- semiliterate # http://studioinfinity.org/semiliterate/mkdocs_semiliterate/plugin/
  #- awesome-list
  #- pagenav-generator #https://github.com/Andre601/mkdocs-pagenav-generator



markdown_extensions:
  - pymdownx.superfences
  - extra
  - tables
  - neoteroi.cards
  - meta
  - mdx_math
  - fenced_code
  - toc:
        permalink: "#"
  - admonition
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
          format: !!python/name:pymdownx.superfences.fence_div_format
  - pymdownx.arithmatex:
      generic: true
  - pymdownx.tabbed:
      alternate_style: true 



nav:
  - Getting Started:
    - Getting Started: index.md
    - Contributing: contribute.md
    - FAQ: 
      - faq.md
    - Events: 
      - Events: events/index.md
      - ERGOHACK: events/ergohack.md
      - ErgoSummit: events/ergosummit.md
  - üî¨ ‚îÉ Learn: 
    - dev/protocol/index.md
    - Key Features: 
      - Why Ergo: dev/protocol/why.md
      - Protocol: dev/protocol/index.md
      - eUTXO:
        - dev/protocol/eutxo.md
        - eUTXO vs Account: dev/protocol/eutxo/accountveutxo.md
        - Atomic Swaps: dev/protocol/eutxo/atomic.md
      - NIPoPoWs:
        - dev/protocol/nipopows.md
        - Light Nodes: dev/protocol/nipopow/nipopow_nodes.md
        - Log-Space Mining: dev/protocol/nipopow/logspace.md
        - Sidechains: dev/protocol/nipopow/sidechains.md
      - Privacy: dev/protocol/zkp.md
      - Storage Rent: mining/rent.md
      - Autolykos: mining/autolykos.md
    - Scaling: dev/protocol/scaling.md
    - Documents: 
      - documents.md
      - Research & Whitepapers: documents.md
      - Social Contract: social_contract.md
      - Know Your Assumptions: kya.md
      - Audit: dev/protocol/audit.md
    - EIPs: dev/protocol/eip.md

    

  - ‚õè ‚îÉ  Mine:
    - Mining: mining/index.md
    - Start Mining: 
      - mining/setup/join.md
      - Solo Mining: mining/setup/solo.md
      - Host a Pool: mining/setup/pool.md
      - Subpooling: mining/setup/subpool.md
    - Autolykos:
      - mining/autolykos.md
      - Algorithm: 
        - mining/algorithm.md
        - Solution Verification: mining/solution-verification.md
        - Difficulty Adjustment: mining/difficulty.md
      - Governance: mining/governance.md
      - Storage Rent: mining/rent.md
      - Log-Space Mining: mining/log_space.md
      - Standards:
        - Emission Retargeting Soft-Fork: mining/standards/eip27.md
        - Tweaking Difficulty Adjustment Algorithm: mining/standards/eip37.md
    
  - üõ† ‚îÉ Build: 
    - dev/start.md
    - Getting Started: 
      - dev/start.md
      - Basics: dev/stack/basics.md
      - Server: dev/stack/server.md
      - Browser: dev/stack/browser.md
      - Desktop: dev/stack/desktop.md
      - Mobile: 
        - dev/stack/mobile.md
        - iOS: dev/stack/ios.md   
        - Android: dev/stack/android.md  
    - Tooling:
      - Node:
        - node/install.md
        - Install: 
          - node/install.md
          - Manual: node/install/manual.md
          - Docker: node/install/docker.md
          - Pi: node/install/pi.md
          - Troubleshooting: node/install/troubleshooting.md
          - FAQ: node/install/node-faq.md
        - Swagger API: node/swagger.md
        - Testnet: 
          - node/testnet.md
          - Full Sync: node/testnet/testnet-full.md
          - CPU Mining: node/testnet/cpu-mining.md
          - Your own chain: node/testnet/mine-your-own-chain.md
          - Development: node/testnet/testnet-dev.md
          - Resources: node/testnet/testnet-resources.md
        - Node Wallet: node/wallet.md
        - Resources:
          #- Architecture: node/architecture.md
          - Distributed Signatures: node/sigs.md
          - Modes of Operation: node/modes.md
          - Hierarchical keys: dev/wallet/keys.md
          - Configuration Files:
            - application.conf: 
              - node/conf.md
              - ergo: 
                - node: node/conf/conf-node.md
                - cache: node/conf/conf-cache.md
                - chain: node/conf/conf-chain.md
                - wallet: node/conf/conf-wallet.md
                - voting: node/conf/conf-voting.md
              - bounded-mailbox: node/conf/conf-bounded.md
              - akka: node/conf/conf-akka.md
              - scorex: node/conf/conf-scorex.md
              - critical-dispatcher: node/conf/conf-crit.md
              - api-dispatcher: node/conf/conf-api.md
        #- Light Modes: 
        #  - Digest State: node/digest-state.md
        #  - History Pruning: node/history-pruning.md
        #  - Snapshots: node/snapshots.md
          - P2P:
            - P2P: dev/p2p/index.md
            - Handshaking: dev/p2p/p2p-handshake.md
            - Network Messages: dev/p2p/network.md
            # - Modifiers Exchange: dev/p2p/modifiers.md
            # - BlockP2P: dev/p2p/BlockP2P.md
      - Explorer: 
        - dev/stack/explorer.md
        - Local Setup: dev/stack/explorer/explorer_local.md
        - Pi Blockchain Explorer: dev/stack/rpi-blockchain-explorer.md
        - GraphQL: dev/stack/explorer/graphql.md
      - Programming Languages:
        - JVM: 
          - Scala: dev/lang/scala.md
          - Java: dev/lang/java.md
          - Kotlin: dev/lang/kotlin.md
        - JavaScript: dev/lang/js.md
        - Rust: dev/lang/rust.md
        - Others: 
          - Python: dev/lang/python.md
          - C#: dev/lang/csharp.md
          - Go: dev/lang/go.md
        
      - Frameworks:
        - AppKit:
          - dev/stack/appkit.md
          - Tutorial: dev/stack/appkit/tutorial.md
          - Gradle: dev/stack/appkit/gradle.md
          - Using Appkit from Python: dev/stack/appkit/appkit_py.md
        - Mosaik: 
          - dev/stack/mosaik.md
          - Tutorial:
            - dev/stack/mosaik/intro.md
            - A simple UI: dev/stack/mosaik/tutorial2.md
            - Processing data: dev/stack/mosaik/tutorial3.md
            - ErgoPay: dev/stack/mosaik/tutorial4.md
            - Web UI: dev/stack/mosaik/tutorial5.md
            - Deployment: dev/stack/mosaik/mosaik-docker-flux.md
            - Example apps: dev/stack/mosaik/examples.md
        - JSON dApp Environment: dev/stack/jde.md
        - Headless dApp Framework: 
          - dev/stack/headless.md
          - Modules: dev/stack/headless/modules.md
        - RustKit: https://github.com/rust-ergo/rustkit
        - SigmaRust: dev/stack/sigma-rust.md
      - Libaries:
        - Fleet (JS): dev/stack/fleet.md
        - GetBlok Plasma: dev/lib/plasma.md
        - Scrypto: https://github.com/input-output-hk/scrypto
        - EIP12-Types: https://github.com/capt-nemo429/eip12-types
        - SigmaJS: dev/lib/sigmajs.md
      - APIs: dev/stack/api.md
      - Off-Chain:
        - Oracle-Core: dev/oc/oracle.md
        - Spectrum.DEX off-chain services: dev/oc/dex_bots.md
        - Ergo Utilities Rust: dev/oc/ergo_utilities.md
      #- Bookmarks: dev/start/resources.md
    - Anatomy of Ergo:
      - Box: 
        - dev/data-model/box.md
        - Box Modelling: dev/data-model/box/box_modeling.md
      - Registers: dev/data-model/box/registers.md
      - Tokens:
        - Create a token: dev/tokens/issue.md
        - Burning a token: dev/tokens/burn.md
        - NFTs:
          - NFTs: dev/tokens/nfts/index.md
          - Create a NFT: dev/tokens/nfts/create.md
          - Royalties: dev/tokens/nfts/royalties.md
        - Standards:
          - Asset Standard: dev/tokens/standards/eip4.md
          - Geniune Token Verification: dev/tokens/standards/eip21.md
          - Auction Contract: dev/tokens/standards/eip22.md
          - Artwork Contract: dev/tokens/standards/eip24.md
      - Addresses: 
        - dev/wallet/address.md
        - Address Encoding: assets/py/Ergo_Address_Encoding.ipynb
      - Transactions: 
        - dev/protocol/transactions.md
        - Model Transaction: dev/protocol/tx/model-tx.md
        - Composing Transactions:
          - Sending A Chained Transaction: dev/anatomy/transactions/chained.md
          - Frameworks: 
            - ErgoPay:
              - ErgoPay: dev/wallet/payments/ergopay/ergo-pay.md
              - Tutorial: dev/wallet/payments/ergopay/ep-tutorial.md
            - dApp Connector: dev/wallet/payments/dApp.md
            - Proxy Contracts:
              - dev/wallet/payments/proxy.md
              - Assembler: dev/stack/assembler.md
          - Manually: 
            - Format: dev/protocol/tx/format.md
            - Merkle Tree: dev/protocol/tx/tx-merkle.md
            - Signing: dev/protocol/tx/signing.md
            - Validation: dev/protocol/tx/validation.md
            - Data Inputs: dev/protocol/tx/read-only-inputs.md
        - Standards:
          - Babel Fees: dev/protocol/tx/babel-fees.md
          - Proxy Contracts: dev/wallet/payments/standards/eip17.md
          - ErgoPay Protocol: dev/wallet/payments/standards/eip20.md
          - Payment Request URI: dev/wallet/payments/standards/eip25.md
        - ErgoTool: dev/stack/ergotool.md

      - Block: dev/data-model/block.md
      - Wallets:
        - dev/wallets.md
        - Ledger: dev/wallet/payments/ledger.md
        - Integration: dev/Integration/guide.md
        - Standards:
          - UTXO-Set Scanning Wallet API: dev/wallet/standards/eip1.md
          - Deterministic Wallet Standard: dev/wallet/standards/eip3.md
          - Cold Wallet: dev/wallet/standards/eip19.md
      #- UTXO-State: 
    - Smart Contracts:
      - Creating a simple P2S app: dev/scs/p2s.md
      - Smart Contracts: dev/scs/index.md
      - ErgoScript: 
        - dev/scs/ergoscript.md
        - Overview: 
          - dev/scs/ergoscript.md
          - Quick Primer: dev/scs/ergoscript-primer.md
        - Sigma Language:
          - dev/scs/sigma-lang.md
          - Language Description: 
            - dev/scs/sigma/lang-spec.md
            - Simple Syntax: dev/scs/syntax.md
            - Sigma Propositions: dev/scs/sigma/sigma-prop.md
            - The Blockchain context: dev/scs/blockchain-context.md
            - Accessing boxes and registers: dev/scs/boxes-and-registers.md
            - Global Functions: dev/scs/global-functions.md
            - Language Operations: dev/scs/sigma/lang-ops.md
          - Cryptographic: 
            - crypto.md
            - Sigma Protocols: 
              - dev/scs/sigma.md
              - Schnorr: 
                - dev/scs/sigma/schnorr.md
                - Verifying Schnorr Signatures: dev/scs/sigma/verifying.md
              - Diffie: 
                - dev/scs/sigma/diffie.md
                - ZeroJoin: dev/crypto/zerojoin.md
            - Ring Signatures:
              - 3-out-of-5 Threshold Signature: dev/scs/sigma/3-out-of-5.md
          - sigmastate-interpreter: dev/scs/sigmastate-interpreter.md
          - ErgoTree: 
            - dev/scs/ergotree.md
            - Introduction: dev/scs/ergotree/ergotree-intro.md
            - As a Language: dev/scs/ergotree/ergotree-lang.md
            - Typing: dev/scs/ergotree/typing.md
            - Evaluation: dev/scs/ergotree/evaluation.md
            - Serialization: dev/scs/ergotree/serialization.md
            - Types: dev/scs/ergotree/types.md
            - Functions: dev/scs/ergotree/functions.md
            - Encoding: dev/scs/ergotree/encoding.md
        - Data Structures:
          - AVL Trees: dev/protocol/avl.md
        - Multi-Stage: 
          - dev/scs/multi.md
          - Transactions:
            - Transaction Chains: dev/scs/tx/tx-chains.md
            - Transaction Trees: dev/scs/tx/tx-tree.md
            - Transaction Graphs: dev/scs/tx/tx-graphs.md
        - Data Inputs: dev/scs/data-inputs.md
      - Tooling:
        - Debugging: dev/scs/debugging.md
        - FlowCards: dev/scs/flowcards.md
        - ErgoScala: dev/stack/ergoscala.md
        - Compiler: dev/stack/compiler.md
        - Kiosk: dev/stack/kiosk.md
    - Resources: dev/stack/introduction.md

     

  - üí° ‚îÉ  Applications: 
    - uses/index.md
    - Infrastructure: 
      - Rosen Bridge: uses/rosen.md
      - Oracles: uses/oracles.md
      - Tooling:
        - Azorus: uses/azorus.md
      - Sidechains: 
        - dev/protocol/nipopow/sidechains.md
        - ErgoData: uses/ErgoData.md
    - dApps:
      - Exchange:
        - DEXs: uses/dex.md
        - NFTs: uses/nft.md
        - Stablecoins: 
          - uses/stablecoins.md
          - SigmaUSD:
            - uses/sigmausd.md
            - Examples: uses/sigmausd/examples.md
            - Mining Incentives: uses/sigmausd/mining-incentives.md
            - Other Stablecoins: uses/sigmausd/comparison.md
          - Dexy: uses/dexy.md
      
      - Zero-Knowledge:
        - Zero-Knowledge Treasury: uses/zkt.md
        - Mixing: uses/mixer.md
        - Trustless LETS: uses/trustless-lets.md
      
      
      - CrowdFunding: 
        - uses/crowdfunding.md
        - ErgoRaffle: uses/raffle.md
      - Gaming: 
        - uses/gaming.md
        - Lotteries: uses/lottery.md

      - P2P:
        - Monetary Systems:
          - LETS: uses/lets.md
          - ChainCash: uses/chaincash.md
        - Markets: 
          - Prediction Markets: uses/prediction_markets.md
        - Financial Instruments:
          - P2P Options Contract: uses/p2p_options.md
          - Lending: uses/lending.md
          - Derivatives: uses/deriv.md
          - Yield Aggregation: uses/yield.md
          - Grid Trading: uses/grid_trading.md
          - Micro Credit: dev/scs/microcredit.md
          - Mutual Credit: uses/mutual_credit.md
          - Bonding Curve: uses/bonding.md
          - Insurance: uses/insurance.md
      - DAOs: uses/dao.md 
      - Misc:
        - ProfitSharing: uses/profit.md
        - Email Client for Blocked Internet: uses/blocked_web.md
      - Tokens:
        - ICOs: uses/ico.md
        - Index Coins: uses/index_coins.md
        - PoW Tokens: uses/PoW_tokens.md
        - Perpetual Tokens: uses/perpetual.md
        - Buy Back Guarantees: uses/dex-buyback.md
      
      
      
      
      
      # - Context Claims: uses/context-claims.md
    #  - Asset Tokenisation: uses/tokenisation.md
      # - Privacy: uses/privacy.md
    #  - Collateral Mining: uses/collateral-mining.md
    #  - Math Fun: uses/math_fun.md
    #  - CDBC: uses/cbdc.md
    # - Atomic Swaps: dev/protocol/atomic.md





